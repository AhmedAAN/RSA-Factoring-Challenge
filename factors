#!/usr/bin/python3
import sys
import random

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def pollard_rho(n):
    if n % 2 == 0:
        return 2

    x = random.randint(2, n - 1)
    y = x
    c = random.randint(1, n - 1)
    d = 1

    while d == 1:
        x = (x * x + c) % n
        y = (y * y + c) % n
        y = (y * y + c) % n
        d = gcd(abs(x - y), n)

        if d == n:
            return pollard_rho(n)

    return d

def findSmallestDivisor(n):
    if n <= 1:
        return n

    divisor = pollard_rho(n)
    return divisor

def smallNumbers(number):
    i = 2
    while i < int(math.sqrt(number)) and number % i != 0:
        i+=1
    return i

with open(sys.argv[1], mode = "r") as file:
    lines = file.readlines()
for line in lines:
    number = int(line) 
    if number < 100000:
        smallestDivisor = smallNumbers(number)
    else:
        smallestDivisor = findSmallestDivisor(number)
    print(f"{number}={int(number/smallestDivisor)}*{smallestDivisor}")
